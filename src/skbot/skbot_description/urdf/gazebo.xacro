<?xml version="1.0"?>
<robot>
  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="front_caster">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <material>Gazebo/White</material>
  </gazebo>
  <!-- <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros2_control.so">
      <parameters>$(find skbot_control)/config/skbot_control.yaml</parameters>
    </plugin>
  </gazebo> -->
<gazebo>
  <plugin name="joint_states" filename="libgazebo_ros_joint_state_publisher.so">
    <joint_name>drivewhl_l_joint</joint_name>
    <joint_name>drivewhl_r_joint</joint_name>
  </plugin>
</gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">

      <ros>
        <namespace>/skbot</namespace>
      </ros>

      <!-- wheels -->
      <left_joint>drivewhl_l_joint</left_joint>
      <right_joint>drivewhl_r_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>${base_width+wheel_width}</wheel_separation>
      <wheel_diameter>${2*wheel_radius}</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>10</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>

      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
    </plugin>
  </gazebo>


  <gazebo  reference="camera">
    <material>Gazebo/Blue</material>>

    <sensor type="camera" name="skbot_camera">
      <!-- Set always_on only sensor, not on plugin -->
      <always_on>1</always_on>
      <visualize>1</visualize>
      <!-- Set update_rate only sensor, not on plugin -->
      <update_rate>10</update_rate>
      <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>320</width>
          <height>240</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      <camera name="camera_name">
        <distortion>
          <k1>0.0</k1>
          <k2>0.0</k2>
          <k3>0.0</k3>
          <p1>0.0</p1>
          <p2>0.0</p2>
          <!-- <center>0.5 0.5</center> -->
        </distortion>
      </camera>

      <!-- Use camera, not camera_triggered -->
      <plugin name="plugin_name" filename="libgazebo_ros_camera.so">
        <!-- <ros>
          <namespace>custom_ns</namespace>
          <argument>image_raw:=custom_img</argument>
          <argument>camera_info:=custom_info</argument>
        </ros> -->

        <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
        <!-- <camera_name>custom_camera</camera_name> -->
        <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
        <!-- <frame_name>custom_frame</frame_name> -->
        <hack_baseline>0.07</hack_baseline>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="hokuyo">
    <sensor name="sensor_ray" type="ray">
      <pose>0.0 0 0 0 0 0</pose>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1.0</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120000</min>
          <max>3.5</max>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <always_on>true</always_on>
      <visualize>true</visualize>
      <topic>scan</topic>

      <update_rate>40.0</update_rate>
      <plugin name="laser" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <!-- <frame_name>base_scan</frame_name> -->
      </plugin>
    </sensor>
  </gazebo>
</robot>